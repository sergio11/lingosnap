[versions]
# Android SDK versions
compileSdk = "35"  # Android compile SDK version
targetSdk = "35"   # Target SDK version
minSdk = "24"      # Minimum supported SDK version

# Compose Compiler version
androidComposeCompiler = "1.5.3"

# Desugaring library for supporting newer Java features in older versions of Android
desugar-jdk-libs = "2.1.4"

# Core splash screen library for a consistent app launch experience
core-splashscreen = "1.0.1"

# Compose Dependencies
# Core libraries for Jetpack Compose
androidx-activity-compose = "1.10.0"
androidx-lifecycle-viewmodel-compose = "2.8.7"
androidx-lifecycle-runtime-compose = "2.8.7"
androidx-navigation-compose = "2.8.6"
androidx-compose-bom = "2025.01.01"  # BOM for Jetpack Compose
brownie-ui = "0.0.65"               # UI library
material-icons-extended = "1.7.7"   # Extended material icons for Compose
coil-compose = "2.5.0"              # Coil library for image loading in Compose

# ExoPlayer for media playback
exoplayer = "2.19.1"

# CameraX for camera functionalities
camera-core = "1.4.1"

# Hilt dependencies for dependency injection
hilt-android-compiler = "2.49"
hilt-android = "2.49"
hilt-navigation-compose = "1.2.0"

# Kotlin Coroutines for asynchronous programming
kotlinx-coroutines-test = "1.7.3"

# JUnit for unit testing
junit = "4.13.2"

# SDK for Google's Gemini models (AI)
generativeai = "0.9.0"

# Data Store for preferences storage
preferences-datastore = "1.1.2"

# Plugin versions
agp = "8.7.3"     # Android Gradle Plugin
kotlin = "2.0.0"   # Kotlin plugin version
daggerHilt = "2.49" # Dagger Hilt for dependency injection

# Firebase Dependencies
firebase-auth-ktx = "23.1.0"
firebase-firestore-ktx = "25.1.1"
firebase-auth = "23.1.0"
firebase-bom = "33.8.0"  # Firebase BOM
firebase-storage-ktx = "21.0.1"

[libraries]
# Core Libraries
core-library-desugaring = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar-jdk-libs" }
core-splashscreen = { group = "androidx.core", name = "core-splashscreen", version.ref = "core-splashscreen" }

# Firebase Libraries
firebase-bom = { group = "com.google.firebase", name = "firebase-bom", version.ref = "firebase-bom" }
firebase-auth-ktx = { module = "com.google.firebase:firebase-auth-ktx", version.ref = "firebase-auth-ktx" }
firebase-auth = { group = "com.google.firebase", name = "firebase-auth", version.ref = "firebase-auth" }
firebase-firestore-ktx = { module = "com.google.firebase:firebase-firestore-ktx", version.ref = "firebase-firestore-ktx" }
firebase-storage-ktx = { module = "com.google.firebase:firebase-storage-ktx", version.ref = "firebase-storage-ktx" }

# Jetpack Compose Libraries
androidx-compose-bom = { module = "androidx.compose:compose-bom", version.ref = "androidx-compose-bom" }
androidx-compose-material3 = { module = "androidx.compose.material3:material3" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity-compose" }
androidx-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle-viewmodel-compose" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle-runtime-compose" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "androidx-navigation-compose" }
androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
androidx-compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest" }
androidx-compose-ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4" }
brownie-ui = { module = "com.dreamsoftware.libraries:brownie-ui", version.ref = "brownie-ui" }
material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "material-icons-extended" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil-compose" }

# CameraX Libraries
androidx-camera-view = { module = "androidx.camera:camera-view", version.ref = "camera-core" }
camera-camera2 = { module = "androidx.camera:camera-camera2", version.ref = "camera-core" }
camera-core = { module = "androidx.camera:camera-core", version.ref = "camera-core" }

# Hilt Dependency Injection Libraries
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt-android-compiler" }
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt-android" }
androidx-hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hilt-navigation-compose" }

# Google AI Libraries (Generative AI)
generativeai = { module = "com.google.ai.client.generativeai:generativeai", version.ref = "generativeai" }

# Preferences Data Store
androidx-preferences-datastore = { module = "androidx.datastore:datastore-preferences", version.ref = "preferences-datastore" }

# ExoPlayer Library
exoplayer = { module = "com.google.android.exoplayer:exoplayer", version.ref = "exoplayer" }

# Kotlin Coroutines Libraries
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines-test" }

# JUnit Libraries
junit = { module = "junit:junit", version.ref = "junit" }

[plugins]
# Plugin configurations
androidApplication = { id = "com.android.application", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
daggerHilt = { id = "com.google.dagger.hilt.android", version.ref = "daggerHilt" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

[bundles]
# Bundles grouping related dependencies together
compose = [
    "androidx-compose-material3",
    "androidx-activity-compose",
    "androidx-compose-ui-tooling-preview",
    "androidx-lifecycle-viewmodel-compose",
    "androidx-lifecycle-runtime-compose",
    "androidx-navigation-compose",
    "androidx-compose-ui-tooling"
]

composeTest = [
    "androidx-compose-ui-test-manifest",
    "androidx-compose-ui-test-junit4"
]